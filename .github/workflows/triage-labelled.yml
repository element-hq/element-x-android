name: Move labelled issues to correct boards and columns

on:
  issues:
    types: [labeled]

jobs:
  move_element_x_issues:
    name: ElementX issues to ElementX project board
    runs-on: ubuntu-latest
    # Skip in forks
    if: >
      github.repository == 'vector-im/element-x-android'
    steps:
      - uses: octokit/graphql-action@v2.x
        with:
          headers: '{"GraphQL-Features": "projects_next_graphql"}'
          query: |
            mutation add_to_project($projectid:ID!,$contentid:ID!) {
              addProjectV2ItemById(input: {projectId: $projectid contentId: $contentid}) {
                item {
                  id
                }
              }
            }
          projectid: ${{ env.PROJECT_ID }}
          contentid: ${{ github.event.issue.node_id }}
        env:
          PROJECT_ID: "PVT_kwDOAM0swc4ABTXY"
          GITHUB_TOKEN: ${{ secrets.ELEMENT_BOT_TOKEN }}

  ex_plorers:
    name: Add labelled issues to X-Plorer project
    runs-on: ubuntu-latest
    if: >
      contains(github.event.issue.labels.*.name, 'Team: Element X Feature')
    steps:
      - uses: octokit/graphql-action@v2.x
        id: add_to_project
        with:
          headers: '{"GraphQL-Features": "projects_next_graphql"}'
          query: |
              mutation add_to_project($projectid:ID!,$contentid:ID!) {
                addProjectV2ItemById(input: {projectId: $projectid contentId: $contentid}) {
                item {
                  id
                  }
                }
              }
          projectid: ${{ env.PROJECT_ID }}
          contentid: ${{ github.event.issue.node_id }}
        env:
          PROJECT_ID: "PVT_kwDOAM0swc4ALoFY"
          GITHUB_TOKEN: ${{ secrets.ELEMENT_BOT_TOKEN }}

  verticals_feature:
    name: Add labelled issues to Verticals Feature project
    runs-on: ubuntu-latest
    if: >
      contains(github.event.issue.labels.*.name, 'Team: Verticals Feature')
    steps:
      - uses: octokit/graphql-action@v2.x
        id: add_to_project
        with:
          headers: '{"GraphQL-Features": "projects_next_graphql"}'
          query: |
              mutation add_to_project($projectid:ID!,$contentid:ID!) {
                addProjectV2ItemById(input: {projectId: $projectid contentId: $contentid}) {
                item {
                  id
                  }
                }
              }
          projectid: ${{ env.PROJECT_ID }}
          contentid: ${{ github.event.issue.node_id }}
        env:
          PROJECT_ID: "PVT_kwDOAM0swc4AHJKW"
          GITHUB_TOKEN: ${{ secrets.ELEMENT_BOT_TOKEN }}
