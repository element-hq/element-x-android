name: Test

on:
  workflow_dispatch:
  pull_request:
  merge_group:
  push:
    branches: [ main, develop ]

# Enrich gradle.properties for CI/CD
env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3072m -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError" -Dkotlin.daemon.jvm.options="-Xmx2560m" -Dkotlin.incremental=false
  CI_GRADLE_ARG_PROPERTIES: --stacktrace -PpreDexEnable=false --max-workers 4 --warn

jobs:
  tests:
    name: Runs unit tests
    runs-on: ubuntu-latest

    # Allow all jobs on main and develop. Just one per PR.
    concurrency:
      group: ${{ github.ref == 'refs/heads/main' && format('unit-tests-main-{0}', github.sha) || github.ref == 'refs/heads/develop' && format('unit-tests-develop-{0}', github.sha) || format('unit-tests-{0}', github.ref) }}
      cancel-in-progress: true
    steps:
      # Increase swapfile size to prevent screenshot tests getting terminated
      # https://github.com/actions/runner-images/discussions/7188#discussioncomment-6750749
      - name: üíΩ Increase swapfile size
        run: |
          sudo swapoff -a
          sudo fallocate -l 8G /mnt/swapfile
          sudo chmod 600 /mnt/swapfile
          sudo mkswap /mnt/swapfile
          sudo swapon /mnt/swapfile
          sudo swapon --show
      - name: ‚è¨ Checkout with LFS
        uses: nschloe/action-cached-lfs-checkout@v1.2.2
        with:
          # Ensure we are building the branch and not the branch after being merged on develop
          # https://github.com/actions/checkout/issues/881
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.ref }}
      - name: ‚òïÔ∏è Use JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      - name: Configure gradle
        uses: gradle/gradle-build-action@v2.9.0
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/develop' }}

      - name: ‚öôÔ∏è Run unit tests, debug and release
        run: ./gradlew test $CI_GRADLE_ARG_PROPERTIES

      - name: üì∏ Run screenshot tests
        run: ./gradlew verifyPaparazziDebug $CI_GRADLE_ARG_PROPERTIES

      - name: üìàGenerate kover report and verify coverage
        run: ./gradlew koverMergedReport koverMergedVerify $CI_GRADLE_ARG_PROPERTIES -Pci-build=true

      - name: üö´ Upload kover failed coverage reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: kover-error-report
          path: |
            **/kover/merged/verification/errors.txt

      - name: ‚úÖ Upload kover report (disabled)
        if: always()
        run: echo "This is now done only once a day, see nightlyReports.yml"

      - name: üö´ Upload test results on error
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: tests-and-screenshot-tests-results
          path: |
            **/build/paparazzi/failures/
            **/build/reports/tests/*UnitTest/

      # https://github.com/codecov/codecov-action
      - name: ‚òÇÔ∏è Upload coverage reports to codecov
        if: always()
        uses: codecov/codecov-action@v3
        # with:
        #  files: build/reports/kover/merged/xml/report.xml
